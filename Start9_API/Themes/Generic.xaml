<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Start9.Api"
                    xmlns:Fluent="urn:fluent-ribbon"
                    xmlns:FluentClr="clr-namespace:Fluent;assembly=Fluent"
                    xmlns:plex="clr-namespace:Start9.Api.Plex"
                    xmlns:controls="clr-namespace:Start9.Api.Controls"
                    xmlns:obj="clr-namespace:Start9.Api.Objects">
    <!--ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Start9.Api;component/Themes/Plex.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Start9.Api;component/Themes/Colors/PlexBlue.xaml"/>
    </ResourceDictionary.MergedDictionaries-->
    
    <!-- Converters -->

    <obj:WidthToHalfWidthConverter x:Key="WidthToHalfWidthConverter"/>

    <!-- End Converters -->
    
    <!-- Window Styles -->

    <Style x:Key="PlexWindowStyle" TargetType="{x:Type plex:PlexWindow}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BodyBrush" Value="{DynamicResource DefaultWindowBodyBrush}"/>
        <Setter Property="FooterBrush" Value="{DynamicResource DefaultWindowFooterBrush}"/>
        <Setter Property="FontFamily" Value="Franklin Gothic Book"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type plex:PlexWindow}">
                    <Grid x:Name="WindowRoot" Margin="{TemplateBinding Margin}">
                        <DockPanel Margin="{TemplateBinding Padding}" LastChildFill="True" Background="Transparent">
                            <Grid x:Name="PART_Titlebar" HorizontalAlignment="Stretch" Margin="0"
                                  Height="{TemplateBinding TitleBarHeight}" Visibility="Visible" Opacity="1"
                                  DockPanel.Dock="Top">
                                <Grid x:Name="ActiveTitlebarBackground" Visibility="Visible">
                                    <Border x:Name="ActiveTitlebarBorder" CornerRadius="12,12,0,0"
                                            BorderThickness="0,1,0,0"
                                            Background="{DynamicResource ActiveTitlebarBackgroundBrush}"
                                            BorderBrush="{DynamicResource ActiveTitlebarBorderBrush}"
                                            Margin="0,0,0,-12" Padding="0" />
                                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1"
                                            Margin="12,2,12,0" Background="{DynamicResource ActiveTitlebarBorderBrush}" />
                                </Grid>
                                <Grid x:Name="InactiveTitlebarBackground" Visibility="Hidden">
                                    <Border x:Name="InactiveTitlebarBorder" CornerRadius="12,12,0,0"
                                            BorderThickness="0,1,0,0"
                                            Background="{DynamicResource InactiveTitlebarBackgroundBrush}"
                                            BorderBrush="{DynamicResource InactiveTitlebarBorderBrush}"
                                            Margin="0,0,0,-12" Padding="0" />
                                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1"
                                            Margin="12,2,12,0"
                                            Background="{DynamicResource InactiveTitlebarBorderBrush}" />
                                </Grid>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="16"
                                        Margin="3">
                                    <Canvas.Background>
                                        <ImageBrush ImageSource="{TemplateBinding Icon}" />
                                    </Canvas.Background>
                                </Canvas>
                                <Label x:Name="TitleText" Content="{TemplateBinding Title}" HorizontalAlignment="Stretch"
                                       VerticalAlignment="Top" HorizontalContentAlignment="Center"
                                       VerticalContentAlignment="Center" Height="26" Margin="0,-2"
                                       FontFamily="Franklin Gothic Book" FontSize="12" Foreground="White">
                                    <Label.Effect>
                                        <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320"
                                                          ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                                    </Label.Effect>
                                </Label>
                                <StackPanel x:Name="CaptionButtons" HorizontalAlignment="Right" VerticalAlignment="Top"
                                            Orientation="Horizontal" Height="22" Margin="5,0">
                                    <Button x:Name="PART_MinimizeButton" Width="18" VerticalAlignment="Stretch"
                                            Style="{DynamicResource CaptionButtonStyle}">
                                        0
                                    </Button>
                                    <Grid x:Name="MaxRestButtonGrid"  Width="18" VerticalAlignment="Stretch" Margin="1,1,-1,-1">
                                        <Button x:Name="PART_MaximizeButton" HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Style="{DynamicResource CaptionButtonStyle}">
                                            1
                                        </Button>
                                        <Button x:Name="PART_RestoreButton" HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Style="{DynamicResource CaptionButtonStyle}" Visibility="Hidden">
                                            2
                                        </Button>
                                    </Grid>
                                    <Button x:Name="PART_CloseButton" Width="18" VerticalAlignment="Stretch"
                                            Style="{DynamicResource CaptionButtonStyle}">
                                        r
                                    </Button>
                                </StackPanel>
                                <ContentPresenter Content="{TemplateBinding TitleBarContent}" />
                            </Grid>
                            <Grid x:Name="ToolBar" HorizontalAlignment="Stretch" Margin="0"
                                  Height="{TemplateBinding ToolBarHeight}" Visibility="Visible" DockPanel.Dock="Top">
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                    <Grid Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Border x:Name="ToolBarBorder" CornerRadius="8,8,0,0" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource WindowToolbarBackgroundBrush}" BorderBrush="{DynamicResource WindowToolbarBorderBrush}">
                                            <Border x:Name="ToolBarSecondaryBorder" CornerRadius="8,8,0,0"
                                                    BorderThickness="0,1,0,0" Background="{DynamicResource WindowToolbarSecondaryBackgroundBrush}"
                                                    BorderBrush="{DynamicResource WindowToolbarSecondaryBorderBrush}" />
                                        </Border>
                                        <Canvas Height="1" VerticalAlignment="Bottom" Margin="0" Background="{DynamicResource WindowToolbarBackgroundBrush}"/>
                                        <Canvas Height="1" VerticalAlignment="Bottom" Margin="1" Background="{DynamicResource WindowToolbarTertiaryBackgroundBrush}"/>
                                        <Canvas Height="1" VerticalAlignment="Bottom" Margin="2" Background="{DynamicResource WindowToolbarQuarternaryBackgroundBrush}"/>
                                    </Grid>
                                    <ContentPresenter Content="{TemplateBinding ToolBarContent}" />
                                </Grid>
                            </Grid>
                            <Grid x:Name="Footer" HorizontalAlignment="Stretch" Margin="0"
                                  Height="{TemplateBinding FooterHeight}" Visibility="Visible" DockPanel.Dock="Bottom">
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,-12,0,0">
                                    <Border x:Name="FooterBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding FooterBrush}" CornerRadius="0,0,12,12" />
                                    <ContentPresenter Content="{TemplateBinding FooterContent}" />
                                </Grid>
                            </Grid>
                            <Border x:Name="BodyBase" CornerRadius="12" BorderBrush="{DynamicResource WindowToolbarBackgroundBrush}" BorderThickness="0,1,0,0" HorizontalAlignment="Stretch" Margin="0" Padding="0">
                                <Border x:Name="Body" CornerRadius="12" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Padding="0" Background="{TemplateBinding BodyBrush}">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Border>
                            </Border>
                        </DockPanel>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Thumb x:Name="PART_ThumbBottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                   Grid.Column="0" Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3"
                                   Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbTop" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0"
                                   Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Height="4"
                                   Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4"
                                   Background="{x:Null}" Margin="0,3" Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4"
                                   HorizontalContentAlignment="Right" Background="{x:Null}" Margin="0,3"
                                   Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbBottomRightCorner" HorizontalAlignment="Right" Cursor="SizeNWSE"
                                   Grid.Row="3" Grid.Column="3" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbTopRightCorner" HorizontalAlignment="Right" Cursor="SizeNESW"
                                   Grid.Row="0" Grid.Column="2" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbTopLeftCorner" HorizontalAlignment="Left" Cursor="SizeNWSE"
                                   Grid.Row="0" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                            <Thumb x:Name="PART_ThumbBottomLeftCorner" HorizontalAlignment="Left" Cursor="SizeNESW"
                                   Grid.Row="3" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                        </Grid>
                        <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumb}" Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTitle" Value="False">
                            <Setter TargetName="TitleText" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowCloseButton" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PART_CloseButton" Property="Width" Value="0"/>
                                <Setter TargetName="PART_CloseButton" Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowMaxRestButton" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="MaxRestButtonGrid" Property="Width" Value="0"/>
                                <Setter TargetName="MaxRestButtonGrid" Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowMinButton" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PART_MinimizeButton" Property="Width" Value="0"/>
                                <Setter TargetName="PART_MinimizeButton" Property="Height" Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowResizeEdges" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="Manual"/>
                                <Condition Property="ShowResizeGrip" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_MinimizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                            <Setter TargetName="PART_MaximizeButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                            <Setter TargetName="PART_RestoreButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                            <Setter TargetName="PART_CloseButton" Property="Foreground" Value="{DynamicResource CaptionButtonInactiveIdleBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="ShowFooter" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="True" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="True" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="True" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0,0,12,12" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="True" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,12,12" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="True" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,0,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="12,12,12,12" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="ShowFooter" Value="False" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Body" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowTitleBar" Value="False" />
                                <Condition Property="ShowToolBar" Value="True" />
                                <Condition Property="Maximized" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ToolBarBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="ToolBarSecondaryBorder" Property="CornerRadius" Value="0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="ShowTitleBar" Value="False">
                            <Setter Property="TitleBarHeight" Value="0" />
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ShowToolBar" Value="False">
                            <Setter Property="ToolBarHeight" Value="0" />
                            <Setter TargetName="ToolBar" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ShowToolBar" Value="True">
                            <Setter TargetName="BodyBase" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="BodyBase" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowToolBar" Value="False" />
                                <Condition Property="IsActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="BodyBase" Property="BorderBrush" Value="{DynamicResource InactiveTitlebarBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="ShowFooter" Value="False">
                            <Setter Property="FooterHeight" Value="0" />
                            <Setter TargetName="Footer" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Maximized" Value="True">
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FooterBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="ActiveTitlebarBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="InactiveTitlebarBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="WindowRoot" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.0" Duration="0:0:0.0" From="0" To="3, 3, -3, -3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="WindowRoot" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.0" Duration="0:0:0.375" From="3, 3, -3, -3" To="107, 107, 93, 93">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="WindowRoot" Storyboard.TargetProperty="Margin" BeginTime="0:0:0.376" Duration="0">
                                            <DiscreteThicknessKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Width" Value="0"/>
                            <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="MaxRestButtonGrid" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="MaxRestButtonGrid" Property="Width" Value="0"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_MinimizeButton" Property="Width" Value="0"/>
                            <Setter TargetName="PART_ThumbBottom" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTop" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopRightCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbTopLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbBottomLeftCorner" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_ThumbLeft" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="ShadowOpacity" To="1" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="ShadowOpacity" To="0.5" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type plex:PlexWindow}"/>

    <!-- End Window Styles -->
    
    
    
    <!-- Ribbon Styles -->

    <Style x:Key="PlexRibbonStyle" TargetType="{x:Type Fluent:Ribbon}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PlexRibbonTextColorBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FluentClr:FrameworkHelper.UseLayoutRounding" Value="True" />
        <Setter Property="TitleBar"
                Value="{Binding TitleBar, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type FluentClr:IRibbonWindow}}, FallbackValue={x:Null}}" />
        <Setter Property="QuickAccessToolBarHeight" Value="{Binding TitleBar.ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FluentClr:IRibbonWindow}}, FallbackValue=23}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:Ribbon}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid x:Name="PART_LayoutRoot" Width="Auto" Height="Auto">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Fluent:RibbonTabControl x:Name="PART_RibbonTabControl" Menu="{TemplateBinding Menu}"
                                                     ContextMenu="{Binding ContextMenu, ElementName=PART_LayoutRoot}"
                                                     Style="{DynamicResource RibbonTabControlStyle}" />

                            <ContentControl x:Name="quickAccessToolBarHolder" Grid.Row="1"
                                            Height="{TemplateBinding QuickAccessToolBarHeight}"
                                            HorizontalAlignment="Left">
                                <Fluent:QuickAccessToolBar x:Name="PART_QuickAccessToolBar"
                                                           ShowAboveRibbon="{Binding ShowQuickAccessToolBarAboveRibbon, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           IsMenuDropDownVisible="{TemplateBinding IsQuickAccessToolBarMenuDropDownVisible}"
                                                           HorizontalAlignment="Left" Focusable="False" />
                            </ContentControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsQuickAccessToolBarVisible" Value="False">
                            <Setter Property="Visibility" TargetName="quickAccessToolBarHolder" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_QuickAccessToolBar" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsCollapsed" Value="True">
                            <Setter Property="Visibility" TargetName="PART_RibbonTabControl" Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="quickAccessToolBarHolder" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ShowQuickAccessToolBarAboveRibbon" Value="True">
                            <Setter Property="Content" TargetName="quickAccessToolBarHolder" Value="{x:Null}" />
                            <Setter Property="Visibility" TargetName="quickAccessToolBarHolder" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:RibbonTabControl}" TargetType="{x:Type Fluent:RibbonTabControl}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PlexRibbonTextColorBrush}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonTabControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid x:Name="Grid" Background="{TemplateBinding Background}"
                                              IsHitTestVisible="True">
                                            <Grid Margin="-1,-2,-1,0" HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch">
                                                <Border x:Name="ToolBarBorder" CornerRadius="0" BorderThickness="1,0"
                                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#FF366AAF" />
                                                                <GradientStop Offset="0.5" Color="#FF5F9CDA" />
                                                                <GradientStop Offset="1" Color="#FF366AAF" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border.BorderBrush>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#FF4D80C9" />
                                                                <GradientStop Offset="0.5" Color="#FF85C0FA" />
                                                                <GradientStop Offset="1" Color="#FF4D80C9" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.BorderBrush>
                                                    <Border x:Name="ToolBarSecondaryBorder" CornerRadius="0"
                                                            BorderThickness="0" Background="#003566A4"
                                                            BorderBrush="#FF3566A4" />
                                                </Border>
                                                <Canvas Height="1" VerticalAlignment="Bottom" Margin="0">
                                                    <Canvas.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#FF366AAF" />
                                                                <GradientStop Offset="0.5" Color="#FF5F9CDA" />
                                                                <GradientStop Offset="1" Color="#FF366AAF" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Canvas.Background>
                                                </Canvas>
                                                <Canvas Height="1" VerticalAlignment="Bottom" Margin="1">
                                                    <Canvas.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#FF5894D3" />
                                                                <GradientStop Offset="0.5" Color="#FF81BEFC" />
                                                                <GradientStop Offset="1" Color="#FF5894D3" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Canvas.Background>
                                                </Canvas>
                                                <Canvas Height="1" VerticalAlignment="Bottom" Margin="2">
                                                    <Canvas.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#FF3C70B5" />
                                                                <GradientStop Offset="0.5" Color="#FF255898" />
                                                                <GradientStop Offset="1" Color="#FF3C70B5" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Canvas.Background>
                                                </Canvas>
                                            </Grid>
                                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                                                                    x:Name="PART_ScrollContentPresenter"
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    IsHitTestVisible="True" />
                                            <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                          Focusable="false" HorizontalAlignment="Left" Width="13"
                                                          Height="Auto" VerticalAlignment="Stretch"
                                                          Style="{DynamicResource ScrollButtonStyle}" Visibility="Hidden">
                                                <Path Fill="Black" Stretch="Fill"
                                                      Stroke="{x:Null}" StrokeThickness="0"
                                                      HorizontalAlignment="Center" Margin="0"
                                                      VerticalAlignment="Center" Width="3" Height="5"
                                                      Data="M0,0L1,1 1,-1z" />
                                            </RepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                          Focusable="false" HorizontalAlignment="Right" Width="13"
                                                          Height="Auto" VerticalAlignment="Stretch"
                                                          Style="{DynamicResource ScrollButtonStyle}" Visibility="Hidden">
                                                <Path Fill="Black" Stretch="Fill"
                                                      Stroke="{x:Null}" StrokeThickness="0"
                                                      HorizontalAlignment="Center" Margin="0"
                                                      VerticalAlignment="Center" Width="3" Height="5"
                                                      Data="M1,0L0,1 0,-1z" />
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="CanContentScroll" Value="True" />
                            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                            <Setter Property="PanningMode" Value="HorizontalOnly" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="ContentGrid"
                          Background="{TemplateBinding Background}"
                          KeyboardNavigation.TabNavigation="Local"
                          Height="Auto"
                          VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="rowDefinition"
                                           MinHeight="{TemplateBinding ContentHeight}"
                                           MaxHeight="{TemplateBinding ContentHeight}" />
                            <RowDefinition x:Name="rowDefinition1"
                                           MinHeight="{TemplateBinding ContentGapHeight}"
                                           MaxHeight="{TemplateBinding ContentGapHeight}" />
                        </Grid.RowDefinitions>
                        <Border x:Name="border" HorizontalAlignment="Stretch" Margin="0,-1,0,0" Width="Auto"
                                BorderThickness="0,1" Grid.Row="1"
                                BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />

                        <Border HorizontalAlignment="Stretch" Margin="1,0,1,0" Grid.Row="1" Grid.RowSpan="1"
                                Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                                TextElement.Foreground="{DynamicResource PlexRibbonTextColorBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ContentControl x:Name="mainContentControl" Margin="0" Focusable="False">
                                <ContentPresenter ContentSource="SelectedContent" x:Name="contentPresenter"
                                                  HorizontalAlignment="Stretch" Margin="0" />
                            </ContentControl>
                        </Border>

                        <Border Margin="0" VerticalAlignment="Stretch" Grid.Row="2" Background="Transparent" />

                        <Grid x:Name="TabsGrid" Background="Transparent"
                              TextElement.Foreground="{DynamicResource PlexRibbonTextColorBrush}"
                              HorizontalAlignment="Stretch" Width="Auto" Margin="0" Grid.RowSpan="1"
                              KeyboardNavigation.TabIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />

                            <ContentPresenter Grid.Column="0" VerticalAlignment="Stretch" ContentSource="Menu" />

                            <Fluent:RibbonScrollViewer HorizontalAlignment="Left" Padding="30,0,0,0" Width="Auto"
                                                       Style="{DynamicResource RibbonTabScrollViewer}"
                                                       HorizontalScrollBarVisibility="Auto"
                                                       VerticalScrollBarVisibility="Disabled" IsHitTestVisible="True"
                                                       IsTabStop="False">
                                <Fluent:RibbonTabsContainer x:Name="PART_TabsContainer" IsItemsHost="True"
                                                            Height="Auto" HorizontalAlignment="Stretch" Margin="0"
                                                            KeyboardNavigation.TabIndex="1" />
                            </Fluent:RibbonScrollViewer>

                            <StackPanel x:Name="toolbarPlaceholder" HorizontalAlignment="Right" Grid.Column="3"
                                        Orientation="Horizontal" Margin="0,0,0,1">
                                <Grid Width="22" Height="19">
                                    <Fluent:ToggleButton x:Name="PART_MinimizeButton" Margin="0" Width="22" Height="22"
                                                         Size="Small"
                                                         Style="{DynamicResource RibbonTabControlToggleButtonStyle}"
                                                         IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Visibility="Visible" />
                                </Grid>
                                <StackPanel x:Name="PART_ToolbarPanel" Orientation="Horizontal" />
                            </StackPanel>
                        </Grid>

                        <Popup x:Name="PART_Popup"
                               PlacementTarget="{Binding Path=SelectedTabItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Placement="Custom" StaysOpen="True" AllowsTransparency="True"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                               IsOpen="{TemplateBinding IsDropDownOpen}" HorizontalOffset="0" VerticalOffset="-10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="20" MaxHeight="20" />
                                    <RowDefinition MinHeight="{TemplateBinding ContentHeight}"
                                                   MaxHeight="{TemplateBinding ContentHeight}" />
                                    <RowDefinition MinHeight="{TemplateBinding ContentGapHeight}"
                                                   MaxHeight="{TemplateBinding ContentGapHeight}" />
                                    <RowDefinition Height="20" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="1" Grid.RowSpan="2" BorderThickness="0,0,0,1" Margin="1,0"
                                        BorderBrush="Transparent" Background="Transparent"
                                        TextElement.Foreground="{DynamicResource PlexRibbonTextColorBrush}"
                                        KeyboardNavigation.TabNavigation="Local"
                                        KeyboardNavigation.DirectionalNavigation="Contained">
                                    <ContentControl x:Name="popupContentControl" Focusable="False" Margin="0" />
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter Property="MinHeight" TargetName="rowDefinition" Value="0" />
                            <Setter Property="MinHeight" TargetName="rowDefinition1" Value="0" />
                            <Setter Property="Content" TargetName="mainContentControl" Value="{x:Null}" />
                            <Setter Property="Content" TargetName="popupContentControl"
                                    Value="{Binding ElementName=contentPresenter, Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownOpen" Value="True" />
                                <Condition Property="IsMinimized" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="PART_MinimizeButton" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type Fluent:RibbonTabItem}" TargetType="{x:Type Fluent:RibbonTabItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsMinimized"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsMinimized, Mode=OneWay, FallbackValue=False}" />
        <Setter Property="IsOpen"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsDropDownOpen, Mode=OneWay, FallbackValue=True}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ActiveTabBackground" Value="Transparent" />
        <Setter Property="ActiveTabBorderBrush" Value="Transparent" />
        <Setter Property="Fluent:RibbonProperties.MouseOverBackground" Value="Transparent" />
        <Setter Property="Fluent:RibbonProperties.AppTheme" Value="{DynamicResource Fluent.Ribbon.AppTheme}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding}"
                               TextWrapping="NoWrap" TextTrimming="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonTabItem}">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" VerticalAlignment="Stretch"
                          Height="Auto" Margin="-28,1,0,-1">
                        <Border x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="Transparent" Margin="0" BorderBrush="#40000000" BorderThickness="1,0,1,1"
                                CornerRadius="0,0,20,20">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="1"
                                        CornerRadius="0,0,19,19" Margin="0" Padding="0" BorderBrush="#FF6098E7">
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            BorderThickness="1" CornerRadius="0,0,18,18" Margin="0" Padding="0"
                                            BorderBrush="#FF558EDD" Background="#FF4D85D5" />
                                </Border>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Margin="0"
                                        Background="#40000000" />
                            </Grid>
                        </Border>
                        <Border x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="Transparent" Margin="0" BorderBrush="#40000000" BorderThickness="1,0,1,1"
                                CornerRadius="0,0,20,20" Opacity="0">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="1"
                                        CornerRadius="0,0,19,19" Margin="0" Padding="0" BorderBrush="#FF57AAF6">
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            BorderThickness="1" CornerRadius="0,0,18,18" Margin="0" Padding="0"
                                            BorderBrush="#FF4D9EEB" Background="#FF4496E3" />
                                </Border>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Margin="0"
                                        Background="#40000000" />
                            </Grid>
                        </Border>
                        <Border x:Name="SelectedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="Transparent" Margin="0" BorderBrush="#40000000" BorderThickness="1,0,1,1"
                                CornerRadius="0,0,20,20" Visibility="Hidden">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="1"
                                        CornerRadius="0,0,19,19" Margin="0" Padding="0" BorderBrush="#FF57AAF6">
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            BorderThickness="1" CornerRadius="0,0,18,18" Margin="0" Padding="0"
                                            BorderBrush="#FF4D9EEB" Background="#FF4496E3" />
                                </Border>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="1" Margin="0"
                                        Background="#40000000" />
                            </Grid>
                        </Border>
                        <ContentControl x:Name="PART_ContentControl"
                                        AutomationProperties.Name="{TemplateBinding Header}"
                                        AutomationProperties.AutomationId="{TemplateBinding Name}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="5,1,5,4"
                                        HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="IdleBackground" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="HoverBackground" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentControl" Property="Margin" Value="5,1,5,3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Height" Value="19" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:RibbonGroupBox}" TargetType="{x:Type Fluent:RibbonGroupBox}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Fluent:KeyTip.Margin" Value="0,15,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonGroupBox}">
                    <Grid x:Name="grid2" HorizontalAlignment="Stretch">
                        <Grid>
                            <Border x:Name="HoverBackground" BorderThickness="1,0,1,1" CornerRadius="0"
                                    Background="Transparent" Opacity="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFB0FAFA" />
                                            <GradientStop Offset="1" Color="#00B0FAFA" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border BorderThickness="0,0,0,1" BorderBrush="White">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="Black" />
                                                <GradientStop Offset="1" Color="Transparent" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.Background>
                                        <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF79C7ED" />
                                                <GradientStop Offset="1" Color="#FF6FB6E9" />
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                    <Grid>
                                        <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="10"
                                                Margin="0,0,0,10">
                                            <Canvas.Background>
                                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#008EE6FA" />
                                                        <GradientStop Offset="1" Color="#FF8EE6FA" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Canvas.Background>
                                        </Canvas>
                                        <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="10"
                                                Height="10" Margin="0">
                                            <Canvas.Background>
                                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#008EE6FA" />
                                                        <GradientStop Offset="0.5" Color="#FF8EE6FA" />
                                                        <GradientStop Offset="1" Color="White" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Canvas.Background>
                                        </Canvas>
                                        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="10"
                                                Margin="10,0,10,0">
                                            <Canvas.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#008EE6FA" />
                                                        <GradientStop Offset="1" Color="#FF8EE6FA" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Canvas.Background>
                                        </Canvas>
                                        <Canvas HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="10"
                                                Height="10" Margin="0">
                                            <Canvas.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#008EE6FA" />
                                                        <GradientStop Offset="0.5" Color="#FF8EE6FA" />
                                                        <GradientStop Offset="1" Color="White" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Canvas.Background>
                                        </Canvas>
                                        <Canvas HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="10"
                                                Margin="0,0,0,10">
                                            <Canvas.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#008EE6FA" />
                                                        <GradientStop Offset="1" Color="#FF8EE6FA" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Canvas.Background>
                                        </Canvas>
                                    </Grid>
                                </Border>
                            </Border>
                            <ContentControl x:Name="border1" Focusable="False">
                                <Grid x:Name="PART_ParentPanel" Margin="0,1,0,2" Grid.RowSpan="2" Height="Auto">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="17" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <WrapPanel x:Name="PART_UpPanel"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                                               IsItemsHost="True" Margin="4,0,4,0" Orientation="Vertical" Grid.Row="1" />

                                    <Grid x:Name="PART_DownGrid"
                                          MaxWidth="{Binding ActualWidth, ElementName=PART_ParentPanel}"
                                          Margin="0,2,2,-2" Grid.Row="0" VerticalAlignment="Top" Height="17">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="Label" HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center" Text="{TemplateBinding Header}"
                                                   TextWrapping="NoWrap" Grid.Row="1"
                                                   Foreground="{DynamicResource PlexRibbonTextColorBrush}" Margin="2,0"
                                                   TextTrimming="CharacterEllipsis" TextAlignment="Center" />
                                        <Fluent:Button Margin="0,0,1,1" x:Name="PART_DialogLauncherButton"
                                                       HorizontalAlignment="Stretch" Width="15" Height="14"
                                                       Grid.Column="1" Focusable="False" IsTabStop="False"
                                                       Template="{DynamicResource DialogLauncherButtonControlTemplate}"
                                                       Background="Transparent" BorderBrush="Transparent"
                                                       VerticalAlignment="Bottom" Icon="{TemplateBinding LauncherIcon}"
                                                       Header="{TemplateBinding LauncherText}"
                                                       Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                       CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}"
                                                       CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                       IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Grid>
                            </ContentControl>
                            <Grid x:Name="grid1" Margin="0" Width="Auto" Height="Auto" Visibility="Collapsed"
                                  Grid.RowSpan="2">
                                <Fluent:TwoLineLabel HorizontalAlignment="Center" VerticalAlignment="Top"
                                                     Text="{TemplateBinding Header}" Margin="5,38,5,0" HasGlyph="True"
                                                     HasTwoLines="True" Style="{DynamicResource TwoLineLabelStyle}" />
                                <Border HorizontalAlignment="Center" VerticalAlignment="Top" Width="31" Height="31"
                                        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Collapsed.BorderBrush}"
                                        BorderThickness="1" Margin="5,3,8,0" CornerRadius="3">
                                    <ContentPresenter x:Name="iconImage" Height="16"
                                                      Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Width="16" SnapsToDevicePixels="True" />
                                </Border>
                                <Popup x:Name="PART_Popup" Width="Auto" Height="Auto" AllowsTransparency="True"
                                       PlacementTarget="{Binding ElementName=grid1, Mode=OneWay}" StaysOpen="True"
                                       IsOpen="{TemplateBinding IsDropDownOpen}">
                                    <Grid Width="Auto" Height="Auto" Margin="0,20">
                                        <Border x:Name="border" Height="Auto"
                                                Background="{DynamicResource Fluent.Ribbon.Brushes.Ribbon.Background}"
                                                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
                                                BorderThickness="1" CornerRadius="1">
                                            <ContentControl x:Name="popupContent" />
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>

                            <Rectangle x:Name="separator"
                                       Fill="{DynamicResource Fluent.Ribbon.Brushes.GroupSeparator.Background}"
                                       HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="1" Height="Auto"
                                       Grid.RowSpan="2" Margin="0,4"
                                       Visibility="Visible" />
                        </Grid>

                        <Image x:Name="PART_SnappedImage" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="State" Value="Collapsed">
                            <Setter Property="Visibility" TargetName="grid1" Value="Visible" />
                            <Setter Property="UIElement.Visibility" TargetName="border1" Value="Collapsed" />
                            <Setter Property="HorizontalAlignment" TargetName="grid2" Value="Left" />
                            <Setter Property="Content" TargetName="border1" Value="{x:Null}" />
                            <Setter Property="Content" TargetName="popupContent"
                                    Value="{Binding ElementName=PART_ParentPanel}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="State" Value="Collapsed" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Collapsed.MouseOver.Background}" />
                        </MultiTrigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.DropDownOpen.Background}" />
                        </Trigger>
                        <Trigger Property="IsLauncherVisible" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DialogLauncherButton" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="State" Value="QuickAccess">
                <Setter Property="Template" Value="{DynamicResource RibbonGroupBoxDropDownButtonControlTemplate}" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="22" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="SnapsToDevicePixels" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:Button}" TargetType="{x:Type Fluent:Button}">
        <Setter Property="Height" Value="68" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="{DynamicResource PlexRibbonTextColorBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:Button}">
                    <Border x:Name="border" CornerRadius="0" BorderThickness="0" Background="Transparent"
                            BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid>
                            <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="#40000000"
                                    BorderThickness="1" CornerRadius="4" Opacity="0">
                                <Border BorderThickness="1" CornerRadius="3">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0.25,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF7FBAE2" />
                                                <GradientStop Offset="1" Color="#407FBAE2" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border BorderThickness="0,1,0,2" CornerRadius="2">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF68A2CC" />
                                                    <GradientStop Offset="1" Color="#FFB8F2FB" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFB8F2FB" />
                                                    <GradientStop Offset="0.75" Color="#FF58BFEA" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                            </Border>
                            <Grid x:Name="stackPanel" Width="Auto" HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch" Margin="10">
                                <ContentPresenter x:Name="iconImage" HorizontalAlignment="Center"
                                                  VerticalAlignment="Top" Width="24" Height="24" Margin="0"
                                                  SnapsToDevicePixels="True"
                                                  Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}"
                                                     Style="{DynamicResource TwoLineLabelStyle}"
                                                     Foreground="{DynamicResource PlexRibbonTextColorBrush}"
                                                     HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                                     VerticalContentAlignment="Bottom" Margin="0" Padding="0"
                                                     HasTwoLines="False" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="Visibility" TargetName="controlLabel" Value="Collapsed" />
                            <Setter Property="HasTwoLines" TargetName="controlLabel" Value="False" />
                            <Setter Property="Width" TargetName="iconImage" Value="16" />
                            <Setter Property="Height" TargetName="iconImage" Value="16" />
                            <Setter Property="Margin" TargetName="iconImage" Value="2,0,2,0" />
                            <Setter Property="Content" TargetName="iconImage"
                                    Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="2,0,2,0" />
                        </Trigger>
                        <Trigger Property="Size" Value="Middle">
                            <Setter Property="Width" TargetName="stackPanel" Value="Auto" />
                            <Setter Property="VerticalAlignment" TargetName="iconImage" Value="Center" />
                            <Setter Property="HasTwoLines" TargetName="controlLabel" Value="False" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="2,0,2,0" />
                            <Setter Property="VerticalAlignment" TargetName="border" Value="Stretch" />
                            <Setter Property="Width" TargetName="iconImage" Value="16" />
                            <Setter Property="Height" TargetName="iconImage" Value="16" />
                            <Setter Property="Margin" TargetName="iconImage" Value="2,0,2,0" />
                            <Setter Property="Content" TargetName="iconImage"
                                    Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="VerticalAlignment" TargetName="controlLabel" Value="Center" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="iconImage" Value="0.5" />
                            <Setter Property="Opacity" TargetName="controlLabel" Value="0.5" />
                            <Setter Property="Effect" TargetName="iconImage">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="68" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Height" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- End Ribbon Styles-->

    <!-- End Ribbon Styles -->
</ResourceDictionary>