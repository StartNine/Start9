<plex:PlexWindow x:Class="Start9.Windows.SettingsWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:local="clr-namespace:Start9"
                 xmlns:apictrl="clr-namespace:Start9.Api.Controls;assembly=Start9.Api"
                 xmlns:plex="clr-namespace:Start9.Api.Plex;assembly=Start9.Api"
                 xmlns:networkui="clr-namespace:NetworkUI;assembly=networkui"
                 xmlns:nodecontrol="clr-namespace:Start9.NodeControl"
                 mc:Ignorable="d"
                 Title="Start9 Settings" Height="610" Width="840" ShowToolBar="True"
                 ResizeMode="CanResize" Visibility="Visible"
                 TitleBarHeight="48">
    <plex:PlexWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Start9.Api;component/Themes/Plex.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BitmapImage x:Key="TestBitmapImage" UriSource="C:\Windows\Web\Wallpaper\img0.jpg" />
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <SolidColorBrush x:Key="nodeBorderBrush" Color="Black" />
            <LinearGradientBrush x:Key="nodeFillBrush" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="White" Offset="0" />
                <GradientStop Color="#7FC9FF" Offset="0.6" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="connectionBrush" Color="Black" />
            <SolidColorBrush x:Key="LinkBrush" Color="#FF40EFFF" />
            <SolidColorBrush x:Key="connectorBackgroundBrush" Color="White"/>
           

            <Style TargetType="{x:Type networkui:NodeItem}">
                <Setter Property="X" Value="{Binding X}" />
                <Setter Property="Y" Value="{Binding Y}" />
                <Setter Property="ZIndex" Value="{Binding ZIndex}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            </Style>

            <Style x:Key="DoubleClickStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
            </Style>
            <Style x:Key="NodeContainerStyle" TargetType="{x:Type networkui:NodeItem}" BasedOn="{StaticResource {x:Type networkui:NodeItem}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type networkui:NodeItem}">
                            <Grid>
                                <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                <Border x:Name="HoverBorder" UseLayoutRounding="True" BorderThickness="0,1" Padding="1" CornerRadius="13" BorderBrush="{DynamicResource LinkBrush}" Opacity="0">
                                    <Border.Effect>
                                        <DropShadowEffect Color="White" Opacity="1" BlurRadius="7.5" ShadowDepth="0"/>
                                    </Border.Effect>
                                    <Border UseLayoutRounding="True" BorderThickness="0,1" CornerRadius="12" BorderBrush="{DynamicResource LinkBrush}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Receiver connector template-->
            <DataTemplate x:Key="inputConnectorTemplate">
                <Grid Margin="0,2,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <networkui:ConnectorItem Grid.Column="0" Width="25" Height="25" Margin="-5,10,10,10" Cursor="Hand" />
                    <TextBlock Grid.Column="1" Margin="5,0,0,0" Text="{Binding ReceiverEntry.FriendlyName}" VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>

            <!--Message connector template-->
            <DataTemplate x:Key="outputConnectorTemplate">
                <Grid HorizontalAlignment="Right" Margin="0,2,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding MessageEntry.FriendlyName}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <Grid Grid.Column="1" Width="25" Height="25" Margin="10,10,-5,10" Cursor="Hand">
                        <networkui:ConnectorItem/>
                        <Ellipse Visibility="{Binding IsConnectionAttached, Converter={StaticResource booleanToVisibilityConverter}}" Fill="{DynamicResource LinkBrush}" IsHitTestVisible="False">
                            <Ellipse.OpacityMask>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Offset="0.25" Color="Black"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.OpacityMask>
                        </Ellipse>
                    </Grid>
                </Grid>
            </DataTemplate>
            <nodecontrol:ScaleToPercentConverter x:Key="scaleToPercentConverter" />
            
            <!--Connector dot style-->
            <Style TargetType="{x:Type networkui:ConnectorItem}">
                <Setter Property="Hotspot" Value="{Binding Hotspot, Mode=OneWayToSource}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type networkui:ConnectorItem}">
                            <Ellipse Stroke="Transparent" StrokeThickness="0" Fill="{DynamicResource RoundButtonHoverPrimaryFillBrush}">
                                <Ellipse.Effect>
                                    <DropShadowEffect Color="Black" Opacity="0.375" BlurRadius="7.5" ShadowDepth="0"/>
                                </Ellipse.Effect>
                            </Ellipse>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Path template-->
            <DataTemplate DataType="{x:Type nodecontrol:MessagePathViewModel}">
                <nodecontrol:CurvedArrow Stroke="{DynamicResource LinkBrush}" StrokeThickness="5" Fill="{Binding Stroke, RelativeSource={RelativeSource Mode=Self}}" Points="{Binding Points}" ArrowHeadLength="5" ArrowHeadWidth="10">
                    <nodecontrol:CurvedArrow.Effect>
                        <DropShadowEffect Color="White" Opacity="1" BlurRadius="7.5" ShadowDepth="0"/>
                    </nodecontrol:CurvedArrow.Effect>
                </nodecontrol:CurvedArrow>
            </DataTemplate>
            
            <!--Node template-->
            <DataTemplate DataType="{x:Type nodecontrol:ModuleViewModel}">
                <DockPanel>
                    <DockPanel.Effect>
                        <DropShadowEffect Color="Black" Direction="225" ShadowDepth="37.5" BlurRadius="50" Opacity="0.375"/>
                    </DockPanel.Effect>
                    <Border Background="#FF5E98D9" Height="40" CornerRadius="0,0,12,12" DockPanel.Dock="Bottom"/>
                    <Border Background="{DynamicResource DefaultWindowBodyBrush}" CornerRadius="12,12,0,0" UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <apictrl:Planerator Margin="16,7,0,30" Height="{Binding ActualWidth, RelativeSource={RelativeSource Mode=Self}}" Grid.Column="1" UseLayoutRounding="True" SnapsToDevicePixels="True" RotationX="-12" RotationZ="6" RotationY="12">
                                <apictrl:Planerator.Effect>
                                    <DropShadowEffect Color="Black" Direction="270" ShadowDepth="50" BlurRadius="50" Opacity="0.25"/>
                                </apictrl:Planerator.Effect>
                                <Grid MinWidth="128" MaxWidth="192" SizeChanged="Node_SizeChanged" Background="#01000000">
                                    <Rectangle x:Name="SizingAid" Fill="#01000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    <Border UseLayoutRounding="True" ClipToBounds="True">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF7FC0FF"/>
                                                    <GradientStop Offset="1" Color="#FFB0D0FF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.OpacityMask>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Grid Width="{Binding ActualWidth, Source={x:Reference SizingAid}}" Height="{Binding ActualHeight, Source={x:Reference SizingAid}}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="50"/>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="50"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="50"/>
                                                            <RowDefinition/>
                                                            <RowDefinition Height="50"/>
                                                        </Grid.RowDefinitions>
                                                        <Rectangle Grid.Column="0" Grid.Row="0">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Offset="0.5" Color="Transparent"/>
                                                                        <GradientStop Offset="0.5" Color="Black"/>
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Rectangle Grid.Column="2" Grid.Row="2">
                                                            <Rectangle.Fill>
                                                                <LinearGradientBrush StartPoint="1,1" EndPoint="0,0">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Offset="0.5" Color="Transparent"/>
                                                                        <GradientStop Offset="0.5" Color="Black"/>
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Border Background="Black" CornerRadius="0,2,0,0" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                                        <Border Background="Black" CornerRadius="0,0,2,0" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                                    </Grid>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Border.OpacityMask>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="10"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="10"/>
                                            </Grid.RowDefinitions>
                                            <Canvas Background="#40000000" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0"/>
                                            <Canvas Background="#40000000" Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"/>
                                            <Canvas Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0" Color="White"/>
                                                            <GradientStop Offset="0.25" Color="#40FFFFFF"/>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas Width="50" HorizontalAlignment="Left" Margin="6,3" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0" Color="#00FFFFFF"/>
                                                            <GradientStop Offset="0.05" Color="#7FFFFFFF"/>
                                                            <GradientStop Offset="0.75" Color="#00FFFFFF"/>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>
                                                <Canvas.Effect>
                                                    <BlurEffect Radius="3" KernelType="Gaussian"/>
                                                </Canvas.Effect>
                                            </Canvas>
                                            <Canvas Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0" Color="#C0000040"/>
                                                            <GradientStop Offset="1" Color="#10000040"/>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas Grid.Column="0" Grid.Row="2">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0.5" Color="#10000040"/>
                                                            <GradientStop Offset="0.5" Color="#10FFFFFF"/>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2">
                                                <Canvas.Background>
                                                    <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
                                                        <RadialGradientBrush.GradientStops>
                                                            <GradientStop Offset="0" Color="White"/>
                                                            <GradientStop Offset="1" Color="#10FFFFFF"/>
                                                        </RadialGradientBrush.GradientStops>
                                                    </RadialGradientBrush>
                                                </Canvas.Background>
                                            </Canvas>
                                        </Grid>
                                    </Border>
                                    <TextBlock FontSize="24" Foreground="#FF2466BD" Text="{Binding Module.Name}" HorizontalAlignment="Stretch" TextAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap">
                                        <TextBlock.Effect>
                                            <DropShadowEffect Color="White" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="1" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </Grid>
                            </apictrl:Planerator>
                            <ItemsControl Grid.Column="0" VerticalAlignment="Center" Margin="-5,0,0,0" ItemsSource="{Binding InputConnectors}" ItemTemplate="{StaticResource inputConnectorTemplate}" Focusable="False"/>
                            <ItemsControl Grid.Column="2" VerticalAlignment="Center" Margin="0,0,-5,0" ItemsSource="{Binding OutputConnectors}" ItemTemplate="{StaticResource outputConnectorTemplate}" Focusable="False"/>
                        </Grid>
                    </Border>
                </DockPanel>
            </DataTemplate>
        </ResourceDictionary>
    </plex:PlexWindow.Resources>
    <plex:PlexWindow.TitleBarContent>
        <Grid Width="34" Height="34" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="7,0,0,0">
            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                <Ellipse.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0" Color="#20000000" />
                            <GradientStop Offset="1" Color="#60FFFFFF" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Ellipse.Fill>
            </Ellipse>
            <Button x:Name="BackButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="3"
                    Padding="-1,0,1,0" Style="{DynamicResource RoundButtonStyle}"
                    Content="{DynamicResource SmallBackArrowPathIcon}" Click="BackButton_Click"
                    IsEnabled="{Binding CanGoBack, Source={x:Reference SettingsFrame}}" />
        </Grid>
    </plex:PlexWindow.TitleBarContent>
    <plex:PlexWindow.DataContext>
        <nodecontrol:NodeControlPageViewModel />
    </plex:PlexWindow.DataContext>
    <plex:PlexWindow.ToolBarContent>
        <!--TextBox HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="22" Margin="18,0"
                 Style="{DynamicResource AddressBox}" /-->
        <Grid x:Name="ToolbarGrid" Margin="0,1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ToggleButton x:Name="ModulesHeader" Style="{DynamicResource PlexGlowToggleButtonStyle}" Click="ToolbarHeader_Click" IsChecked="True">Modules</ToggleButton>
            <ToggleButton x:Name="MarketHeader" Style="{DynamicResource PlexGlowToggleButtonStyle}" Grid.Column="1" Click="ToolbarHeader_Click" IsChecked="False">Market (Mart9? Store9?)</ToggleButton>
            <ToggleButton x:Name="SettingsHeader" Style="{DynamicResource PlexGlowToggleButtonStyle}" Grid.Column="2" Click="ToolbarHeader_Click" IsChecked="False">Settings</ToggleButton>
        </Grid>
    </plex:PlexWindow.ToolBarContent>
    <plex:PlexWindow.Content>
        <Grid x:Name="RootGrid">
            <Grid x:Name="InstalledModulesGrid">
                <Grid.RenderTransform>
                    <TranslateTransform/>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="280"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0" Color="#FF588FD0"/>
                            <GradientStop Offset="1" Color="#00588FD0"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Grid.Background>
                <ListView DockPanel.Dock="Left" 
                          BorderBrush="Transparent" 
                          BorderThickness="0" 
                          Grid.Column="0" 
                          x:Name="Modules"
                          UseLayoutRounding="True" 
                          ItemsSource="{x:Static local:Module.Modules}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          HorizontalContentAlignment="Stretch"
                          ItemContainerStyle="{StaticResource DoubleClickStyle}">
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:Module}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding Path=Name, Mode=OneTime}" FontWeight="Bold" FontSize="18" TextWrapping="Wrap"/>
                                <TextBlock Text="{Binding Path=Description, Mode=OneTime}" Grid.Row="1" TextWrapping="Wrap"/>
                                <TextBlock FontSize="10" Grid.Row="2" TextWrapping="Wrap">
                                    <Run Text="Version: "/>
                                    <Run Text="{Binding Path=Version, Mode=OneTime}"/>
                                </TextBlock>
                                <TextBlock FontSize="10" Grid.Row="3" TextWrapping="Wrap">
                                    <Run Text="Publisher: "/>
                                    <Run Text="{Binding Path=Publisher, Mode=OneTime}"/>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#FFD8DDF0"/>
                                <GradientStop Offset="1" Color="#00D8DDF0"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </ListView.Background>
                    <ListView.Effect>
                        <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                    </ListView.Effect>
                </ListView>
                <Grid Grid.Column="1"/>
                <ScrollViewer
                    CanContentScroll="True"
                    VerticalScrollBarVisibility="Visible"
                    HorizontalScrollBarVisibility="Visible"
                    Focusable="False"
                    Grid.Column="1">
                    <networkui:NetworkView
                        Background="Transparent"
                        x:Name="networkControl"
                        NodesSource="{Binding Network.Nodes}"
                        ConnectionsSource="{Binding Path=Network.Connections}"    
                        ConnectionDragStarted="networkControl_ConnectionDragStarted"
                        QueryConnectionFeedback="networkControl_QueryConnectionFeedback"
                        ConnectionDragging="networkControl_ConnectionDragging"                            
                        ConnectionDragCompleted="NetworkControl_ConnectionDragCompleted"
                        NodeItemContainerStyle="{DynamicResource NodeContainerStyle}"/>
                </ScrollViewer>
            </Grid>
            <Grid x:Name="MarketGrid" Visibility="Hidden">
                <Grid.RenderTransform>
                    <TranslateTransform/>
                </Grid.RenderTransform>
                <Frame x:Name="MarketFrame" Margin="2" Padding="0" HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch" Visibility="Hidden" Navigated="MarketFrame_Navigated"
                   NavigationUIVisibility="Hidden">
                    <Frame.OpacityMask>
                        <VisualBrush AlignmentX="Center" AlignmentY="Center">
                            <VisualBrush.Visual>
                                <Border Background="Black" BorderBrush="Transparent" BorderThickness="0"
                                    CornerRadius="0,0,12,12"
                                    Width="{Binding ActualWidth, Source={x:Reference SizingAid}, FallbackValue=25}"
                                    Height="{Binding ActualHeight, Source={x:Reference SizingAid}, FallbackValue=25}" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Frame.OpacityMask>
                </Frame>
                <Button HorizontalAlignment="Center" VerticalAlignment="Center" Click="MarketWindowButton_Click">Show Market Window</Button>
            </Grid>
            <Grid x:Name="SettingsGrid" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden">
                <Grid.RenderTransform>
                    <TranslateTransform/>
                </Grid.RenderTransform>
                <Rectangle x:Name="SizingAid" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       Opacity="1" IsHitTestVisible="False" />
                <Frame x:Name="SettingsFrame" Margin="2" Padding="0" HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch" Visibility="Visible" Navigated="SettingsFrame_Navigated"
                   NavigationUIVisibility="Hidden">
                    <Frame.OpacityMask>
                        <VisualBrush AlignmentX="Center" AlignmentY="Center">
                            <VisualBrush.Visual>
                                <Border Background="Black" BorderBrush="Transparent" BorderThickness="0"
                                    CornerRadius="0,0,12,12"
                                    Width="{Binding ActualWidth, Source={x:Reference SizingAid}, FallbackValue=25}"
                                    Height="{Binding ActualHeight, Source={x:Reference SizingAid}, FallbackValue=25}" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Frame.OpacityMask>
                </Frame>
            </Grid>
        </Grid>
    </plex:PlexWindow.Content>
    <plex:PlexWindow.FooterContent>
        <Grid x:Name="FooterRoot">
            <Button HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="200" Height="24"
                    Content="Footer Content Test" />
        </Grid>
    </plex:PlexWindow.FooterContent>
</plex:PlexWindow>